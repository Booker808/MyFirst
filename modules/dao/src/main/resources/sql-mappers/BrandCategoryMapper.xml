<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- brand_category表:品牌分类关联表模块 -->
<mapper namespace="com.csjscm.core.framework.dao.BrandCategoryMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.csjscm.core.framework.model.BrandCategory">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="brand_id" property="brandId" jdbcType="INTEGER" />
        <result column="lv1_category_id" property="lv1CategoryId" jdbcType="INTEGER" />
        <result column="lv2_category_id" property="lv2CategoryId" jdbcType="INTEGER" />
        <result column="lv3_category_id" property="lv3CategoryId" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
    </resultMap>
     <resultMap id="ModelResultMap" type="com.csjscm.core.framework.vo.BrandCategoryVo" extends="BaseResultMap">
         <result column="class_name" property="className" jdbcType="VARCHAR" />
     </resultMap>
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,brand_id,lv1_category_id,lv2_category_id,lv3_category_id,type 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="brandId != null and brandId != '' ">
                and brand_id = #{brandId,jdbcType=INTEGER}
            </if>
            <if test="lv1CategoryId != null and lv1CategoryId != '' ">
                and lv1_category_id = #{lv1CategoryId,jdbcType=INTEGER}
            </if>
            <if test="lv2CategoryId != null and lv2CategoryId != '' ">
                and lv2_category_id = #{lv2CategoryId,jdbcType=INTEGER}
            </if>
            <if test="lv3CategoryId != null and lv3CategoryId != '' ">
                and lv3_category_id = #{lv3CategoryId,jdbcType=INTEGER}
            </if>
            <if test="type != null and type != '' ">
                and type = #{type,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from  brand_category
        where id =   #{id,jdbcType=INTEGER}
    </delete>
    
    <insert id="insert" parameterType="com.csjscm.core.framework.model.BrandCategory">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into brand_category(brand_id,lv1_category_id,lv2_category_id,lv3_category_id,type)values(#{brandId,jdbcType=INTEGER},#{lv1CategoryId,jdbcType=INTEGER},#{lv2CategoryId,jdbcType=INTEGER},#{lv3CategoryId,jdbcType=INTEGER},#{type,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.csjscm.core.framework.model.BrandCategory">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into brand_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null ">
                id,
            </if>
            <if test="brandId != null ">
                brand_id,
            </if>
            <if test="lv1CategoryId != null ">
                lv1_category_id,
            </if>
            <if test="lv2CategoryId != null ">
                lv2_category_id,
            </if>
            <if test="lv3CategoryId != null ">
                lv3_category_id,
            </if>
            <if test="type != null ">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                     <if test="id != null ">
                        #{id,jdbcType=INTEGER},
                     </if>
                     <if test="brandId != null ">
                        #{brandId,jdbcType=INTEGER},
                     </if>
                     <if test="lv1CategoryId != null ">
                        #{lv1CategoryId,jdbcType=INTEGER},
                     </if>
                     <if test="lv2CategoryId != null ">
                        #{lv2CategoryId,jdbcType=INTEGER},
                     </if>
                     <if test="lv3CategoryId != null ">
                        #{lv3CategoryId,jdbcType=INTEGER},
                     </if>
                     <if test="type != null ">
                        #{type,jdbcType=INTEGER},
                     </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.csjscm.core.framework.model.BrandCategory">
        update brand_category set 
            brand_id = #{brandId,jdbcType=INTEGER},
            lv1_category_id = #{lv1CategoryId,jdbcType=INTEGER},
            lv2_category_id = #{lv2CategoryId,jdbcType=INTEGER},
            lv3_category_id = #{lv3CategoryId,jdbcType=INTEGER},
            type = #{type,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="com.csjscm.core.framework.model.BrandCategory">
        update brand_category
          <set>
            <if test="brandId != null and brandId != '' ">        
                brand_id = #{brandId,jdbcType=INTEGER},                
            </if>
            <if test="lv1CategoryId != null and lv1CategoryId != '' ">        
                lv1_category_id = #{lv1CategoryId,jdbcType=INTEGER},                
            </if>
            <if test="lv2CategoryId != null and lv2CategoryId != '' ">        
                lv2_category_id = #{lv2CategoryId,jdbcType=INTEGER},                
            </if>
            <if test="lv3CategoryId != null and lv3CategoryId != '' ">        
                lv3_category_id = #{lv3CategoryId,jdbcType=INTEGER},                
            </if>
            <if test="type != null and type != '' ">        
                type = #{type,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List" />
        from brand_category
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from brand_category
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from brand_category
        <include refid="searchBy"/>
    </select>
    <select id="findCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(id)
        from brand_category
        <include refid="searchBy"/>
    </select>
    <select id="findCategoryNameList" resultType="java.lang.String" parameterType="java.util.HashMap">
     SELECT class_name from category WHERE id in (SELECT lv3_category_id from brand_category WHERE brand_id=#{brandId} AND type=#{type})
    </select>

    <select id="findBrandCategoryVo" resultMap="ModelResultMap" parameterType="java.lang.Integer">
SELECT a.*,if(ISNULL(b.class_name),c.class_name,b.class_name)  class_name  from brand_category a
LEFT JOIN category b on a.lv3_category_id =b.id
LEFT JOIN sp_category c on a.lv3_category_id =c.id
WHERE a.brand_id=#{brandId}
    </select>
    <delete id="deleteByBrandId" parameterType="java.lang.Integer">
        delete from  brand_category
        where brand_id =   #{brandId,jdbcType=INTEGER}
    </delete>
</mapper>
