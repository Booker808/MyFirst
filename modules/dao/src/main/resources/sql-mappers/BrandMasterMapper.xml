<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csjscm.core.framework.dao.BrandMasterMapper">
  <resultMap id="BaseResultMap" type="com.csjscm.core.framework.model.BrandMaster">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand_id" jdbcType="VARCHAR" property="brandId" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="brand_pic" jdbcType="VARCHAR" property="brandPic" />
    <result column="brand_info" jdbcType="VARCHAR" property="brandInfo" />
    <result column="brand_ca" jdbcType="VARCHAR" property="brandCa" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_user_id" jdbcType="VARCHAR" property="editUserId" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="request_id" jdbcType="VARCHAR" property="requestId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
    <result column="is_authorize" jdbcType="INTEGER" property="isAuthorize"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, brand_id, brand_name, brand_pic, brand_info, brand_ca, create_user_id, create_time, 
    edit_user_id, edit_time, request_id,category_id,is_authorize
  </sql>
  <!-- 基本的sql查询条件公共引用 -->
  <sql id="searchBy">
    <trim prefix="where" prefixOverrides="and|or">
      <if test=" id != null  ">
        id  = #{id,jdbcType=INTEGER}
      </if>
      <if test="brandId != null and brandId != '' ">
        and brand_id = #{brandId,jdbcType=VARCHAR}
      </if>
      <if test="brandName != null and brandName != '' ">
        and brand_name = #{brandName,jdbcType=VARCHAR}
      </if>
      <if test="brandNameLike != null and brandNameLike != '' ">
        and brand_name like concat('%',#{brandNameLike,jdbcType=VARCHAR},'%')
      </if>
      <if test="brandPic != null and brandPic != '' ">
        and brand_pic = #{brandPic,jdbcType=VARCHAR}
      </if>
      <if test="brandInfo != null and brandInfo != '' ">
        and brand_info = #{brandInfo,jdbcType=VARCHAR}
      </if>
      <if test="brandCa != null and brandCa != '' ">
        and brand_ca = #{brandCa,jdbcType=VARCHAR}
      </if>
      <if test="createUserId != null and createUserId != '' ">
        and create_user_id = #{createUserId,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null ">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="editUserId != null and editUserId != '' ">
        and edit_user_id = #{editUserId,jdbcType=VARCHAR}
      </if>
      <if test="editTime != null ">
        and edit_time = #{editTime,jdbcType=TIMESTAMP}
      </if>
      <if test="requestId != null and requestId != '' ">
        and request_id = #{requestId,jdbcType=VARCHAR}
      </if>
      <if test="categoryId != null">
        and category_id = #{categoryId,jdbcType=INTEGER}
      </if>
      <if test="isAuthorize != null">
        and is_authorize = #{isAuthorize,jdbcType=INTEGER}
      </if>
    </trim>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from brand_master
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from brand_master
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.csjscm.core.framework.model.BrandMaster">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into brand_master (id, brand_id, brand_name, 
      brand_pic, brand_info, brand_ca, 
      create_user_id, create_time, edit_user_id, 
      edit_time, request_id,category_id,is_authorize)
    values (#{id,jdbcType=INTEGER}, #{brandId,jdbcType=VARCHAR}, #{brandName,jdbcType=VARCHAR}, 
      #{brandPic,jdbcType=VARCHAR}, #{brandInfo,jdbcType=VARCHAR}, #{brandCa,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{editUserId,jdbcType=VARCHAR}, 
      #{editTime,jdbcType=TIMESTAMP}, #{requestId,jdbcType=VARCHAR},#{categoryId,jdbcType=INTEGER},#{isAuthorize,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.csjscm.core.framework.model.BrandMaster">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into brand_master
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="brandPic != null">
        brand_pic,
      </if>
      <if test="brandInfo != null">
        brand_info,
      </if>
      <if test="brandCa != null">
        brand_ca,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editUserId != null">
        edit_user_id,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="requestId != null">
        request_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="isAuthorize != null">
        is_authorize,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="brandPic != null">
        #{brandPic,jdbcType=VARCHAR},
      </if>
      <if test="brandInfo != null">
        #{brandInfo,jdbcType=VARCHAR},
      </if>
      <if test="brandCa != null">
        #{brandCa,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUserId != null">
        #{editUserId,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="isAuthorize != null">
        #{isAuthorize,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csjscm.core.framework.model.BrandMaster">
    update brand_master
    <set>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="brandPic != null">
        brand_pic = #{brandPic,jdbcType=VARCHAR},
      </if>
      <if test="brandInfo != null">
        brand_info = #{brandInfo,jdbcType=VARCHAR},
      </if>
      <if test="brandCa != null">
        brand_ca = #{brandCa,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUserId != null">
        edit_user_id = #{editUserId,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        request_id = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="isAuthorize != null">
        is_authorize= #{isAuthorize,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csjscm.core.framework.model.BrandMaster">
    update brand_master
    set brand_id = #{brandId,jdbcType=VARCHAR},
      brand_name = #{brandName,jdbcType=VARCHAR},
      brand_pic = #{brandPic,jdbcType=VARCHAR},
      brand_info = #{brandInfo,jdbcType=VARCHAR},
      brand_ca = #{brandCa,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_user_id = #{editUserId,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      request_id = #{requestId,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      is_authorize = #{isAuthorize,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByBrand" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from brand_master
    <include refid="searchBy"/>
  </select>
  <select id="selectByBrandName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      id,brand_name
    from brand_master
    where brand_name like concat('%',#{brandName,jdbcType=VARCHAR},'%')
  </select>
  <select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select
    <include refid="Base_Column_List" />
    from brand_master
    <include refid="searchBy"/>
  </select>

  <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select
    <include refid="Base_Column_List" />
    from brand_master
    <include refid="searchBy"/>
  </select>
  <select id="findCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
    select count(id)
    from brand_master
    <include refid="searchBy"/>
  </select>
  <select id="selectByBrandNameSky" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      id,brand_name
    from brand_master
  </select>
  <select id="findBrandByLv3CategoryId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  SELECT a.* FROM  brand_master a
   LEFT JOIN  brand_category b  on a.id=b.brand_id
   WHERE b.lv3_category_id=#{lv3CategoryId} and b.type=2
  </select>
</mapper>