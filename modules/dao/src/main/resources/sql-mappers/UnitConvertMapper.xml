<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csjscm.core.framework.dao.UnitConvertMapper">
  <resultMap id="BaseResultMap" type="com.csjscm.core.framework.model.UnitConvert">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="obj_name" jdbcType="VARCHAR" property="objName" />
    <result column="fz_num" jdbcType="DECIMAL" property="fzNum" />
    <result column="fm_num" jdbcType="INTEGER" property="fmNum" />
    <result column="isvalid" jdbcType="VARCHAR" property="isvalid" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_user_id" jdbcType="VARCHAR" property="editUserId" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="request_id" jdbcType="VARCHAR" property="requestId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, unit, obj_name, fz_num, fm_num, isvalid, memo, create_user_id, create_time, edit_user_id, 
    edit_time, request_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from unit_convert
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from unit_convert
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.csjscm.core.framework.model.UnitConvert">
    insert into unit_convert (id, unit, obj_name, 
      fz_num, fm_num, isvalid, 
      memo, create_user_id, create_time, 
      edit_user_id, edit_time, request_id
      )
    values (#{id,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, #{objName,jdbcType=VARCHAR}, 
      #{fzNum,jdbcType=DECIMAL}, #{fmNum,jdbcType=INTEGER}, #{isvalid,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{editUserId,jdbcType=VARCHAR}, #{editTime,jdbcType=TIMESTAMP}, #{requestId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.csjscm.core.framework.model.UnitConvert">
    insert into unit_convert
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="objName != null">
        obj_name,
      </if>
      <if test="fzNum != null">
        fz_num,
      </if>
      <if test="fmNum != null">
        fm_num,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editUserId != null">
        edit_user_id,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="requestId != null">
        request_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="objName != null">
        #{objName,jdbcType=VARCHAR},
      </if>
      <if test="fzNum != null">
        #{fzNum,jdbcType=DECIMAL},
      </if>
      <if test="fmNum != null">
        #{fmNum,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUserId != null">
        #{editUserId,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csjscm.core.framework.model.UnitConvert">
    update unit_convert
    <set>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="objName != null">
        obj_name = #{objName,jdbcType=VARCHAR},
      </if>
      <if test="fzNum != null">
        fz_num = #{fzNum,jdbcType=DECIMAL},
      </if>
      <if test="fmNum != null">
        fm_num = #{fmNum,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        isvalid = #{isvalid,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUserId != null">
        edit_user_id = #{editUserId,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        request_id = #{requestId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csjscm.core.framework.model.UnitConvert">
    update unit_convert
    set unit = #{unit,jdbcType=VARCHAR},
      obj_name = #{objName,jdbcType=VARCHAR},
      fz_num = #{fzNum,jdbcType=DECIMAL},
      fm_num = #{fmNum,jdbcType=INTEGER},
      isvalid = #{isvalid,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_user_id = #{editUserId,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      request_id = #{requestId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>