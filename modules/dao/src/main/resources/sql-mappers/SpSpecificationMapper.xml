<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- sp_specification表:分类属性表模块 -->
<mapper namespace="com.csjscm.core.framework.dao.SpSpecificationMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.csjscm.core.framework.model.SpSpecification">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="spec_name" property="specName" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,spec_name,status,type,category_id 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="specName != null and specName != '' ">
                and spec_name = #{specName,jdbcType=VARCHAR}
            </if>
            <if test="status != null and status != '' ">
                and status = #{status,jdbcType=INTEGER}
            </if>
            <if test="type != null and type != '' ">
                and type = #{type,jdbcType=INTEGER}
            </if>
            <if test="categoryId != null and categoryId != '' ">
                and category_id = #{categoryId,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from  sp_specification
        where id =   #{id,jdbcType=INTEGER}
    </delete>
    
    <insert id="insert" parameterType="com.csjscm.core.framework.model.SpSpecification">
        insert into sp_specification(spec_name,status,type,category_id)values(#{specName,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},#{type,jdbcType=INTEGER},#{categoryId,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.csjscm.core.framework.model.SpSpecification">
        insert into sp_specification
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null ">
                id,
            </if>
            <if test="specName != null ">
                spec_name,
            </if>
            <if test="status != null ">
                status,
            </if>
            <if test="type != null ">
                type,
            </if>
            <if test="categoryId != null ">
                category_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                     <if test="id != null ">
                        #{id,jdbcType=INTEGER},
                     </if>
                     <if test="specName != null ">
                        #{specName,jdbcType=VARCHAR},
                     </if>
                     <if test="status != null ">
                        #{status,jdbcType=INTEGER},
                     </if>
                     <if test="type != null ">
                        #{type,jdbcType=INTEGER},
                     </if>
                     <if test="categoryId != null ">
                        #{categoryId,jdbcType=INTEGER},
                     </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.csjscm.core.framework.model.SpSpecification">
        update sp_specification set 
            spec_name = #{specName,jdbcType=VARCHAR},
            status = #{status,jdbcType=INTEGER},
            type = #{type,jdbcType=INTEGER},
            category_id = #{categoryId,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="com.csjscm.core.framework.model.SpSpecification">
        update sp_specification
          <set>
            <if test="specName != null and specName != '' ">        
                spec_name = #{specName,jdbcType=VARCHAR},                
            </if>
            <if test="status != null and status != '' ">        
                status = #{status,jdbcType=INTEGER},                
            </if>
            <if test="type != null and type != '' ">        
                type = #{type,jdbcType=INTEGER},                
            </if>
            <if test="categoryId != null and categoryId != '' ">        
                category_id = #{categoryId,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List" />
        from sp_specification
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from sp_specification
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from sp_specification
        <include refid="searchBy"/>
    </select>
    <select id="findCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(id)
        from sp_specification
        <include refid="searchBy"/>
    </select>

</mapper>
