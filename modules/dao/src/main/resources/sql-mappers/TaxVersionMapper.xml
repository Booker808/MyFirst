<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csjscm.core.framework.dao.TaxVersionMapper" >
  <resultMap id="BaseResultMap" type="com.csjscm.core.framework.model.TaxVersion" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="edit_user" property="editUser" jdbcType="VARCHAR" />
    <result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, version, enable, create_user, create_time, edit_user, edit_time
  </sql>
  <sql id="searchByExample">
    <where>
      <if test="version !=null and version != ''">
        version like concat('%',#{version,jdbcType=VARCHAR},'%')
      </if>
    </where>
  </sql>
  <sql id="searchBy">
    <where>
      <if test="enable != null">
        and enable = #{enable,jdbcType=INTEGER}
      </if>
      <if test="notId != null">
        and id != #{notId,jdbcType=INTEGER}
      </if>
    </where>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tax_version
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List"/>
    from tax_version
    <include refid="searchByExample"/>
    order by create_time desc
  </select>
  <select id="findCount" parameterType="map" resultType="int">
    select count(1)
    from tax_version
    <include refid="searchBy"/>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tax_version
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.csjscm.core.framework.model.TaxVersion" >
    insert into tax_version (id, version, enable, 
      create_user, create_time, edit_user, 
      edit_time)
    values (#{id,jdbcType=INTEGER}, #{version,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{editUser,jdbcType=VARCHAR}, 
      #{editTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.csjscm.core.framework.model.TaxVersion">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into tax_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="editUser != null" >
        edit_user,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null" >
        #{editUser,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csjscm.core.framework.model.TaxVersion" >
    update tax_version
    <set >
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null" >
        edit_user = #{editUser,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csjscm.core.framework.model.TaxVersion" >
    update tax_version
    set version = #{version,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_user = #{editUser,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>