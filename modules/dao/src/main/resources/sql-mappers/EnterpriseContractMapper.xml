<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csjscm.core.framework.dao.EnterpriseContractMapper" >
  <resultMap id="BaseResultMap" type="com.csjscm.core.framework.model.EnterpriseContract" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ent_number" property="entNumber" jdbcType="VARCHAR" />
    <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
    <result column="scope" property="scope" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="contract_type" property="contractType" jdbcType="INTEGER" />
    <result column="contract_url" property="contractUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
    <result column="edit_user" property="editUser" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ent_number, contract_name, scope, version, contract_type, contract_url, create_time, 
    edit_time, edit_user, isdelete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from enterprise_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from enterprise_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.csjscm.core.framework.model.EnterpriseContract" >
    insert into enterprise_contract (id, ent_number, contract_name, 
      scope, version, contract_type, 
      contract_url, create_time, edit_time, 
      edit_user, isdelete)
    values (#{id,jdbcType=INTEGER}, #{entNumber,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, 
      #{scope,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{contractType,jdbcType=INTEGER}, 
      #{contractUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{editTime,jdbcType=TIMESTAMP}, 
      #{editUser,jdbcType=VARCHAR}, #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.csjscm.core.framework.model.EnterpriseContract" >
    insert into enterprise_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="entNumber != null" >
        ent_number,
      </if>
      <if test="contractName != null" >
        contract_name,
      </if>
      <if test="scope != null" >
        scope,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="contractType != null" >
        contract_type,
      </if>
      <if test="contractUrl != null" >
        contract_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="editUser != null" >
        edit_user,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="entNumber != null" >
        #{entNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contractUrl != null" >
        #{contractUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null" >
        #{editUser,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csjscm.core.framework.model.EnterpriseContract" >
    update enterprise_contract
    <set >
      <if test="entNumber != null" >
        ent_number = #{entNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        scope = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        contract_type = #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contractUrl != null" >
        contract_url = #{contractUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null" >
        edit_user = #{editUser,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csjscm.core.framework.model.EnterpriseContract" >
    update enterprise_contract
    set ent_number = #{entNumber,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=INTEGER},
      contract_url = #{contractUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      edit_user = #{editUser,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>