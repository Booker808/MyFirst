<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csjscm.core.framework.dao.InvUnitMapper">
  <resultMap id="BaseResultMap" type="com.csjscm.core.framework.model.InvUnit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="obj_name" jdbcType="VARCHAR" property="objName" />
    <result column="obj_type" jdbcType="INTEGER" property="objType" />
    <result column="isvalid" jdbcType="INTEGER" property="isvalid" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="request_id" jdbcType="VARCHAR" property="requestId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, obj_name, obj_type, isvalid, memo, request_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inv_unit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inv_unit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.csjscm.core.framework.model.InvUnit">
    insert into inv_unit (id, obj_name, obj_type, 
      isvalid, memo, request_id
      )
    values (#{id,jdbcType=INTEGER}, #{objName,jdbcType=VARCHAR}, #{objType,jdbcType=INTEGER}, 
      #{isvalid,jdbcType=INTEGER}, #{memo,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.csjscm.core.framework.model.InvUnit">
    insert into inv_unit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="objName != null">
        obj_name,
      </if>
      <if test="objType != null">
        obj_type,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="requestId != null">
        request_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="objName != null">
        #{objName,jdbcType=VARCHAR},
      </if>
      <if test="objType != null">
        #{objType,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csjscm.core.framework.model.InvUnit">
    update inv_unit
    <set>
      <if test="objName != null">
        obj_name = #{objName,jdbcType=VARCHAR},
      </if>
      <if test="objType != null">
        obj_type = #{objType,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null">
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        request_id = #{requestId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csjscm.core.framework.model.InvUnit">
    update inv_unit
    set obj_name = #{objName,jdbcType=VARCHAR},
      obj_type = #{objType,jdbcType=INTEGER},
      isvalid = #{isvalid,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      request_id = #{requestId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>